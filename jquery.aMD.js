// Generated by CoffeeScript 1.8.0
(function($, window, undefined_) {
  return $.fn.aMD = function(options) {
    var $styles, MD, defaults, settings;
    $styles = $('<style id="aMD_styles"> .aMD_fullscreen_container { background: #FFF; position: fixed; top: 0; left: 0; width: 100%; height: 100%; padding: 0px; z-index: 999999; } .aMD_container { border: 0px solid #AAA; border-width: 1px 1px 0 1px; } .aMD_iFrame { background-color: #FFF; width: 50%; margin-left: 50%; border: none; } .aMD_toolbar { position: absolute; left: 0; width: 50%; height: auto !important; z-index: 1; } .aMD_toolbar a { background-color: #CCC; } .aMD_toolbar a img { display: block; opacity: .4; } .aMD_toolbar a:hover img { opacity: 1; } .aMD_toolbar .left, .aMD_toolbar .right { position: absolute; } .aMD_toolbar .left { left: 0px; } .aMD_toolbar .right { right: 1px; } .aMD_container textarea { background: #F2F2F2; position: absolute; top: 0; left: 0; width: 50%; height: 100%; margin: 0; padding: 42px 12px 12px; border: 0px solid #AAA; border-right-width: 1px; font-family: Courier New, monospace; font-size: 13px; } .aMD_fullscreen_container .aMD_container { height: 100% !important; } </style>');
    MD = function($el, s) {
      var $container, $fullscreenContainer, $iContents, $markup, $textBox, aMD_editor, addClass, addImage, addURL, buildToolbars, colourPallete, fire, getText, iFrame, init, insertAtCaret, mdify, prependEveryLineInSelection, prependSelection, scalePreview, setCSS, setColour, toggleFullscreen, wrapSelection;
      aMD_editor = this;
      $textBox = $el;
      $container = null;
      $markup = null;
      $fullscreenContainer = null;
      iFrame = null;
      $iContents = null;
      init = function(s) {
        var textBox_id;
        if ($('style#aMD_styles').length === 0) {
          $('head').append($styles);
        }
        textBox_id = $textBox.attr('id');
        iFrame = document.createElement("iframe");
        iFrame.className = 'aMD_iFrame';
        iFrame.frameBorder = 0;
        iFrame.frameMargin = 0;
        iFrame.framePadding = 0;
        iFrame.width = '50%';
        iFrame.id = textBox_id + "-iFrame";
        $(iFrame).load(function() {
          return fire();
        });
        $markup = $('<input type="hidden" name="aMD_markup"/>');
        $container = $('<div class="aMD_container"></div>');
        $container.css({
          position: 'relative',
          height: $textBox.height()
        });
        $fullscreenContainer = $('<div class="aMD_fullscreen_container"></div>');
        $textBox.wrap($container);
        $textBox.before($markup);
        $textBox.after(iFrame);
        $textBox.on('change input propertychange', function() {
          return getText();
        });
        return $textBox.on('keydown', function(e) {
          if (e.metaKey) {
            switch (e.keyCode) {
              case 66:
                e.preventDefault();
                wrapSelection('**');
                return false;
              case 73:
                e.preventDefault();
                wrapSelection('_');
                return false;
              case 75:
                e.preventDefault();
                addURL();
                return false;
            }
          } else {
            switch (e.keyCode) {
              case 9:
                e.preventDefault();
                prependSelection('\t');
                return false;
            }
          }
        });
      };
      fire = function() {
        $iContents = $(iFrame).contents();
        buildToolbars();
        scalePreview();
        setCSS();
        return getText();
      };
      setCSS = function() {
        var css, i;
        $iContents.find('body').addClass('aMD-body').css({
          'margin': '0px',
          'width': 'auto',
          'height': '100%',
          'padding': $textBox.css('padding'),
          'cursor': 'text',
          'overflow': 'auto'
        });
        if (settings.extStyles) {
          i = 0;
          while (i < settings.extStyles.length) {
            css = document.createElement("link");
            css.type = "text/css";
            css.rel = "stylesheet";
            css.href = settings.extStyles[i];
            $iContents.find("head").append(css);
            i++;
          }
        }
        return getText();
      };
      buildToolbars = function() {
        var $left_toolbar, cssURL;
        if (settings.icons) {
          $left_toolbar = $('<div class="aMD_toolbar"> <div class="left"> <a href="#" class="bold" data-tooltip="Bold"><img src="' + settings.imgPath + '/bold.gif"/> </a><a href="#" class="italic" data-tooltip="Italic"><img src="' + settings.imgPath + '/italic.gif"/> </a><a href="#" class="linethrough" data-tooltip="Linethrough"><img src="' + settings.imgPath + '/linethrough.gif"/> </a><a href="#" class="quote" data-tooltip="Quote"><img src="' + settings.imgPath + '/quote.gif"/> </a><a href="#" class="addURL" data-tooltip="Link"><img src="' + settings.imgPath + '/insert_link.gif"/> </a><a href="#" class="horizontalRule" data-tooltip="Horisontal Rule"><img src="' + settings.imgPath + '/horizontal_rule.gif"/> </a><a href="#" class="list" data-tooltip="List"><img src="' + settings.imgPath + '/list.gif"/></a> </div> <div class="right"> <a href="http://daringfireball.net/projects/markdown/basics" target="_blank" data-tooltip="Markdown Help"><img src="' + settings.imgPath + '/md.gif"/> </a><a href="#" class="go_fullscreen" data-tooltip="Go Fullscreen"><img src="' + settings.imgPath + '/fullscreen.gif"/></a> </div> </div>');
        } else {
          $left_toolbar = $('<div class="aMD_toolbar"> <div class="left"> <a href="#" class="bold" data-tooltip="Bold">bold </a><a href="#" class="italic" data-tooltip="Italic">italic </a><a href="#" class="linethrough" data-tooltip="Linethrough">linethrough </a><a href="#" class="quote" data-tooltip="Quote">quote </a><a href="#" class="addURL" data-tooltip="Link">link </a><a href="#" class="horizontalRule" data-tooltip="Horisontal Rule">hr </a><a href="#" class="list" data-tooltip="List">list</a> </div> <div class="right"> <a href="http://daringfireball.net/projects/markdown/basics" target="_blank" data-tooltip="Markdown Help">? </a><a href="#" class="go_fullscreen" data-tooltip="Go Fullscreen">fullscreen </div> </div>');
        }
        if ($("#aMD_classes").length > 0) {
          cssURL = $("#aMD_classes").attr("href");
          jQuery.get(cssURL, null, function(data) {
            var classes, i, selector;
            classes = data.match(/\.\w+\s+\{/g);
            selector = "| <select >\t\t\t\t\t\t\t<option value=\"\">\t\t\t\t\t\t\t\t- class -\t\t\t\t\t\t\t</option>";
            i = 0;
            while (i < classes.length) {
              classes[i] = classes[i].replace(/[\s\{\.]/g, "");
              selector += "<option value=\"" + classes[i] + "\">";
              selector += toString(classes[i]);
              selector += "</option>";
              i++;
            }
            selector += "</select>";
            return toolbar.append(selector);
          });
        }
        $(".bold", $left_toolbar).on('click', function() {
          wrapSelection('**');
          return false;
        });
        $(".italic", $left_toolbar).on('click', function() {
          wrapSelection('_');
          return false;
        });
        $(".linethrough", $left_toolbar).on('click', function() {
          wrapSelection('~~');
          return false;
        });
        $(".quote", $left_toolbar).on('click', function() {
          prependEveryLineInSelection('> ');
          return false;
        });
        $(".addURL", $left_toolbar).on('click', function() {
          addURL();
          return false;
        });
        $(".biggerText", $left_toolbar).on('click', function() {
          applyToText("increasefontsize");
          return false;
        });
        $(".smallerText", $left_toolbar).on('click', function() {
          applyToText("decreasefontsize");
          return false;
        });
        $(".horizontalRule", $left_toolbar).on('click', function() {
          prependSelection('- - -');
          return false;
        });
        $(".list", $left_toolbar).on('click', function() {
          prependEveryLineInSelection('- ');
          return false;
        });
        $(".go_fullscreen", $left_toolbar).on('click', function() {
          toggleFullscreen();
          return false;
        });
        return $textBox.before($left_toolbar);
      };
      wrapSelection = function(chars) {
        var char_count, selection;
        selection = $textBox.selection('get');
        char_count = chars.length;
        if (selection.substr(0, char_count) === chars && selection.substr(selection.length - char_count) === chars) {
          return mdify(selection.substr(char_count, selection.length - char_count * 2));
        } else {
          return mdify(chars + selection + chars);
        }
      };
      prependSelection = function(chars) {
        var char_count, selection;
        selection = $textBox.selection('get');
        char_count = chars.length;
        if (selection.substr(0, char_count) === chars) {
          return mdify(selection.substr(char_count, selection.length - char_count));
        } else {
          return mdify(chars + selection);
        }
      };
      prependEveryLineInSelection = function(chars) {
        var char_count, i, line, lines, selection, _i, _len;
        selection = $textBox.selection('get');
        char_count = chars.length;
        lines = selection.split('\n');
        for (i = _i = 0, _len = lines.length; _i < _len; i = ++_i) {
          line = lines[i];
          if (line.substr(0, char_count) === chars) {
            lines[i] = line.substr(char_count, selection.length - char_count);
          } else {
            lines[i] = chars + line;
          }
        }
        return mdify(lines.join('\n'));
      };
      insertAtCaret = function(chars) {
        return mdify(chars);
      };
      addURL = function() {
        var link_text, replacement, url;
        url = prompt("Enter a URL:", "http://");
        if ((url != null) && (url !== "")) {
          link_text = $textBox.selection('get');
          replacement = '[' + link_text + '](' + url + ')';
          return mdify(replacement);
        }
      };
      mdify = function(replacement) {
        $textBox.selection('replace', {
          text: replacement,
          caret: 'after'
        });
        return getText();
      };
      addClass = function(cls) {};
      addImage = function() {
        var imgURL;
        imgURL = prompt("Enter a URL:", "http://");
        if ((imgURL != null) && (imgURL !== "")) {
          return $textBox.execCommand("InsertImage", false, imgURL);
        }
      };
      getText = function() {
        var markup;
        markup = aMD.makeHtml($textBox.val());
        $textBox.data('markup', markup);
        $markup.val(markup);
        return $iContents.find('body').html(markup);
      };
      scalePreview = function() {
        return iFrame.height = $textBox.css('height');
      };
      toggleFullscreen = function() {
        $container = $('.aMD_container');
        if ($container.closest('.aMD_fullscreen_container').length > 0) {
          $container.unwrap();
        } else {
          $container.wrap($fullscreenContainer);
        }
        return scalePreview();
      };
      colourPallete = function(dir, width, height) {
        var b, colour, g, numList, r;
        r = 0;
        g = 0;
        b = 0;
        numList = new Array(6);
        colour = "";
        numList[0] = "00";
        numList[1] = "40";
        numList[2] = "80";
        numList[3] = "BF";
        numList[4] = "FF";
        document.writeln("<table cellspacing=\"1\" cellpadding=\"0\" border=\"0\">");
        r = 0;
        while (r < 5) {
          if (dir === "h") {
            document.writeln("<tr>");
          }
          g = 0;
          while (g < 5) {
            if (dir === "v") {
              document.writeln("<tr>");
            }
            b = 0;
            while (b < 5) {
              colour = String(numList[r]) + String(numList[g]) + String(numList[b]);
              document.write("<td bgcolor=\"#" + colour + "\" style=\"width:" + width + "px; height:" + height + "px;\">");
              document.write("<a href=\"#\" onclick=\"setColour('#" + colour + "'); return false;\">k</a>");
              document.writeln("</td>");
              b++;
            }
            if (dir === "v") {
              document.writeln("</tr>");
            }
            g++;
          }
          if (dir === "h") {
            document.writeln("</tr>");
          }
          r++;
        }
        return document.writeln("</table>");
      };
      setColour = function(colour) {
        return Editor.execCommand("color", false, colour);
      };
      $.extend(aMD_editor, {
        reload: function() {
          return enableDesignMode();
        },
        unload: function() {
          return disableDesignMode();
        }
      });
      return init();
    };
    defaults = {
      imgPath: "../imgs/static/aMD",
      extStyles: ["../css/main.css"],
      icons: true
    };
    settings = $.extend({}, defaults, options);
    return this.each(function() {
      var $el, md;
      $el = $(this);
      md = $el.data("aMD");
      if (md) {
        return md.reload();
      } else {
        md = new MD($el, settings);
        return $el.data("aMD", md);
      }
    });
  };
})(jQuery, this);
